--------------------------Main Data TYPE:-----------------------
CHAR ===> 2000 characters -- fixed length
VARCHAR ===> 4000 characters --it will occupy data for NULL value with variable length
VARCHAR2 ===> 4000 characters --iit will not occupy data for NULL value with variable length

NUMBER  ===> NUMBER(6,4)=45.6734 ---(1 to 38,-87 to 127)

DATE

CLOB  4GB
BLOB  4GB

--------------------CONSTRAINTS---------------------------------

NOT NULL
UNIQUE
PRIMARY KEY
FOREIGN KEY
CHECK
DEFAULT

--------------------DATABASE------------------------------------

Craete database ======>>> Craete database rss;
Drop database======>>> Drop database rss;
Show all available database ======>>> show database;
Backup database ======>>> backup database rss to disk = 'D:\backups\testDB.bak';
Backup database(Partial) ======>>> backup database rss to disk = 'D:\backups\testDB.bak' with differential;

------------------- DDL ----------------------------------------

CREATE
DROP
TRUNCATE
RENAME
ALTER
MODIFY

Craete database ======>>> Craete database rss;
Drop database======>>> Drop database rss;

Create table rss_table (
id varchar(556),
Name varchar(234),
class_rss varchar(453)
);

create table PRODUCTS2(
ProdID number(38) Primary key,
ProdName varchar2(50) not null,
Qty number(10) check (Qty > 0),
Description varchar2(100)
)

create table LIBRARY (
regno number references students(regno), ----forign key syntax
bookno number references books(bookno),
DOI date,
DOR date
)

create table rss_copy as 
select id,Name,class_rss
from rss_table
where id ='35'


Drop table rss_table
truncate table rss_table 

ALTER table rss_table
add exe varchar(255);


ALTER table rss_table
drop column exe;

ALTER table rss_table
MODIFY exe NUMBER;

RENAME rss_table to rss_table2 -------its used to rename table name

--------------------DML-------------------------

INSERT
UPDATE
DELETE

INSERT into rss_table values(val1,val2,......valn) ------it will insert into all column respctivelly
WHERE [condition]

INSERT into rss_table (col1,col2,.....,coln) -----will insert whichever mentioned in col list
values(val1,val2,......valn)
WHERE [condition]

UPDATE rss_table
SET col1=val1,col2=val2,....coln=valn  --------if no where condition then it will Update all record
WHERE [condition]

DELETE from rss_table -------if no where condition then it will delete all record
where [condition]

----------------------DQL-------------------------

SELECT * from rss_table;

----------------------DCL--------------------------

GRANT     GRANT UNLIMITED TABLESPACE TO books_admin;
REVOKE    REVOKE SELECT, UPDATE, INSERT on emp from sami;

----------------------TCL--------------------------

COMMIT
ROLLBACK   
SAVEPOINT
RELEASE

SAVEPOINT savepointname ------checkpoint

ROLLBACK TO SAVEPOINT_NAME ---- it will rollback till here
ROLLBACK ----it will rollback completly
RELEASE SAVEPOINT savepointname  ------it will delete savepointname 

------------------------ROWNUM-----------

SELECT * FROM Customers   ------to get first 3 record from result set
WHERE ROWNUM <= 3;

-------------------coiumn function------

MAX
MIN
COUNT
AVG
SUM

-------------------Special Operators ( IN , BETWEEN , LIKE , IS )-----------

select * from emp
where deptno in (10,20)

select * from emp
where deptno between 10 and 40  ------- here between is inclusive


select * from emp
where MGR like '76%' -----used for pattern matching


select * from emp
where MGR like '76__'-------used for pattern matching

select * from emp
where comm is not null ---- fetching non null column


----------------------Logical Operators ( NOT, AND, OR )-------------

select * from emp 
where ename like '_____' and SAL >1000

select * from emp 
where ename like '_____' or SAL >1000

select * from emp 
where deptno not in (30)

-----------------------(HAVING, DISTINCT)------------------------------------------

select * from emp
where deptno in (10,20)
order by ename desc   ---------------------ORDER BY should be used always as the last statement in the SQL query.

select DISTINCT deptno from emp;  ------fetches unique value of deptno

----------------------------------------
