difference bw python 2 and 3 and which version you are using and why
range vs xrange
input vs raw_input
how python script runs and .pyc file
precedence order of execution
Python memory management
Namespaces and Scope
max = 5<4 and 5 or 4  # turnery operator
max = 5 if 5<4 else 4 # turnery operator
swapping = a,b = b,a  
Inplace operator ==> a = a+b and it will return a+b and store it in a seperate variable a+=b will store in a itself
-------------------------------------------------------------------------------
							      DataTypes
-------------------------------------------------------------------------------
Property | Data Structure					  string   List	  	  Tuple	  	  Dict	  	  Set

Mutable										  No        Yes		  No		  Yes		  Yes
Ordered										  yes       Yes		  Yes		  No		  No
Sortable									  No        Yes		  Yes		  No		  No
Reversible									  No        Yes		  Yes		  No		  No
Slice-able [ : ]							  Yes       Yes		  Yes		  No		  No
Comprehensions								  No        Yes		  No		  Yes		  Yes
Accessible using index operators [ ]		  yes       Yes		  Yes		  No	      No
Merging using + operator					  No        Yes		  Yes		  No		  No
-------------------------------------------------------------------------------
							      String
-------------------------------------------------------------------------------
byte object and str object
encode and decode
slicing concepts
String can be concatenate like this => "adb" "rty"
-------------------------------------------------------------------------------
							      List
-------------------------------------------------------------------------------
List basic operations like pop del remove insert append extend sort reverse sorted reversed  +,*, in, not in 
difference between append and extend
x = [x if x%2 == 0 else None for x in range(4)] #list comprehension

pop = Remove and return item at index (default last). Raises IndexError if list is empty or index is out of range.
remove = Remove first occurrence of value. Raises ValueError if the value is not present. return None
insert = Insert object before index  ==>> list.insert(index, element) 
append = Append object to the end of the list
extend = Extend list by appending elements from the iterable.it must be itrabele
-------------------------------------------------------------------------------
							      Tuple
-------------------------------------------------------------------------------
Tuple basic operations like + ,count(),index()
why tuple is faster than list  ===>>>(Tuples are stored in a single block of memory. Tuples are immutalbe,
It doesn't require extraspace to store new objects. 
Lists are allocated in two blocks: the fixed one with all the Python object information and a variable sized block for the data. 
It is the reason creating a tuple is faster than List)
Tuple comprehension: do not exist
-------------------------------------------------------------------------------
							      Set
-------------------------------------------------------------------------------
set => basic operations like add,update,|=,remove,discard,pop
In set only unmutable data(string,tuple,integer,floating number,frozenset) we can use as element.
set => issubset() or <= & issuperset() or >= , if both are same then both function will return TRUE as "Any set is a subset of itself"
SET OPERATIONS: intersection() &, difference() -, symmetric difference() ^, union() |,difference_update() -=, intersection_update() &=, symmetric_difference_update() ^=

x = {x if x%2 == 0 else None for x in range(4)} #set comprehension

frozenset concept

Methods supported by SETS       Methods supported by FROZENSETS

add()
clear()
copy()                          copy()
difference()                    difference()
difference_update()
discard()
intersection()                  intersection()
intersection_update()
isdisjoint()                    isdisjoint()
issubset()                      issubset()
issuperset()                    issuperset()
pop()
remove()
symmetric_difference()          symmetric_difference()
symmetric_difference_update()
union()                         union()
update()
-------------------------------------------------------------------------------
							      Dictionary
-------------------------------------------------------------------------------
Dictionary basic operation like Keys(),values(),items(),update(),get() or [key],del , pop(), popitem(), fromkeys(), setdefault()

pop() = If specified key is present in the dictionary, it remove and return its value.  element = Dictionary.pop('Key')

popitem() = The popitem() doesn't take any parameters,returns an arbitrary element (key, value) pair from the dictionary
removes an arbitrary element (the same element which is returned) from the dictionary

OrderedDict ==> from collections import OrderedDict 
Sorting the dictionary by value or key

x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
#Sort a Python dictionary by key

for key in sorted(x):    
    print("%s: %s" % (key, x[key]))

#Sort a Python dictionary by Value

sorted_x = sorted(x.items(), key=lambda kv: kv[1])

#maximum and minimum value of a Python dictionary

key_max = max(x.keys(), key=(lambda k: x[k]))
key_min = min(x.keys(), key=(lambda k: x[k]))

reverse of dictionary by value or key
Packing and Unpacking of Dictionary
#Dictionary comprehension ==> x = {x:x if x%2 == 0 else None for x in range(4)} #Must see
-------------------------------------------------------------------------------
							  OOPS    
------------------------------------------------------------------------------- 
OOPS concepts polymorphism,inheritance,encapsulation ==>> myObject._MyClass__hiddenVariable
inheritance ==>>Multilevel,Multiple and MRO concept
Class and instance variable
class ,static and static methods
method overloading
operator overloading using magic method
class object structure
constructor  
destructor 
issubclass and super
@property setter getter deleter property()
new, init, magic fun
Instance can modify the class level variable refer coreyscahfer video 3
classmethod  can be access using instance but if you will modify using instance anyhow it will change for all instance as we are using cls keyword in it refer coreyscahfer video3
abstract class
-------------------------------------------------------------------------------
							      
------------------------------------------------------------------------------- 
enumerate,zip,iteritem,items,sorted,reversed,join,split
__name__ variable and used cases
args and kwargs and packing unpacking of arguments
Difference between ==,isintance and is operator in Python
deepcopy,shallow copy and object assignment(=) refer this https://stackoverflow.com/questions/17246693/what-is-the-difference-between-shallow-copy-deepcopy-and-normal-assignment-oper

lambda filter map reduce
iterator
generator
x = (x for x in range(4)) #generator comprehension
yield keyword
Partial function
first class function
Decorator

Diffrence between modules and packages
randint() and randrange() and range module
Python OS ,sys module,Copy module 
how to find current working directory   ---> os.getcwd()
how to get list of directory ---> os.listdir()
mkdir command  ---> os.mkdir() 
rename file  ---> os.rename('old.txt','New.txt')

Exception Handling
Exceptions in Python and custom exception
TypeError,ValueError,IndexError 

File Handling read,readline,readlines seek tail fflush with open write
-------------------------------------------------------------------------------
							  DATA STRUCTURE    
------------------------------------------------------------------------------- 
Linear Search 
Binary Search

Bubble Sort
Selection Sort
Insertion Sort
Merge sort
Heap Sort
Quick Sort

-------------------------------------------------------------------------------
							  REGULAR EXPRESSION  
------------------------------------------------------------------------------- 
Python re module
re.match() vs re.search() vs re.findall()
sub() and split() and group() 


. + * ? [] $ ^ () {} | \ escape required

.       - Any Character Except New Line
\d      - Digit (0-9)
\D      - Not a Digit (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Whitespace (space, tab, newline)
\S      - Not Whitespace (space, tab, newline)

\b      - Word Boundary
\B      - Not a Word Boundary
^       - Beginning of a String
$       - End of a String

[]      - Matches Characters in brackets
[^ ]    - Matches Characters NOT in brackets
|       - Either Or
( )     - Group

Quantifiers:
*       - 0 or More
+       - 1 or More
?       - 0 or One
{3}     - Exact Number
{3,4}   - Range of Numbers (Minimum, Maximum)


#### Sample Regexs ####

[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+
